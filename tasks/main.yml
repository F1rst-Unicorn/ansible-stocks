---
- name: Install from file
  include_tasks: package_installation.yml
  when: not stocks_use_official_repo

- name: Install from repository
  include_tasks: repo_installation.yml
  when: stocks_use_official_repo

- name: Configure stocks
  become: True
  template:
    src: stocks.properties.j2
    dest: "{{ stocks_etc }}/stocks.properties"
    owner: "{{ stocks_tomcat_user }}"
    group: "{{ stocks_tomcat_user }}"
    mode: 0644

- name: Link server.war
  become: True
  file:
    src: "{{ stocks_lib }}/server.war"
    dest: "{{ stocks_tomcat_root }}/stocks.war"
    state: link

- name: Start tomcat
  become: True
  service:
    name: tomcat8
    state: started
    enabled: True

- name: Setup database
  include_tasks: db_setup.yml
  when: stocks_local_database

- name: Create CA
  become: True
  become_user: "{{ stocks_tomcat_user }}"
  command: "{{ stocks_lib }}/setup-ca {{ stocks_base }}/root/CA {{ stocks_base }}"
  args:
    creates: "{{ stocks_base }}/root/CA"

- name: Create download points
  become: True
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: True
    owner: "{{ stocks_tomcat_user }}"
    group: "{{ stocks_tomcat_user }}"
  with_items:
    - src: "{{ stocks_base }}/root/CA/certs/ca.cert.pem"
      dest: "{{ stocks_base }}/root/nginx/ca"
    - src: "{{ stocks_base }}/root/CA/intermediate/certs/ca-chain.cert.pem"
      dest: "{{ stocks_base }}/root/nginx/chain"

- name: Create nginx SSL
  become: True
  file:
    path: /etc/nginx/ssl
    state: directory
    mode: 0700

- name: Copy key material
  become: True
  copy:
    src: "{{ item.src }}"
    dest: "/etc/nginx/ssl/{{ item.dest }}"
    remote_src: True
    mode: 0400
  with_items:
    - src: "{{ stocks_base }}/root/CA/certs/ca.cert.pem"
      dest: stocks.cert.pem
    - src: "{{ stocks_base }}/root/CA/intermediate/certs/ca-chain.cert.pem"
      dest: stocks.ca-chain.pem
    - src: "{{ stocks_base }}/root/CA/intermediate/certs/server.cert.pem"
      dest: stocks.cert.pem
    - src: "{{ stocks_base }}/root/CA/intermediate/private/server.key.pem"
      dest: stocks.key.pem
  notify: Restart nginx

- name: Generate dhparams
  become: True
  command: openssl dhparam -out /etc/nginx/dhparam.pem 4096
  args:
    creates: /etc/nginx/dhparam.pem
  notify: Restart nginx

- name: Add nginx reload to sudoers
  become: True
  copy:
    content: "{{ stocks_sudoers_line }}"
    dest: "/etc/sudoers.d/stocks"
    mode: 0400
    validate: /usr/bin/visudo -cf %s

- name: Install nginx config
  become: True
  copy:
    src: "{{ stocks_base }}/nginx.conf"
    dest: /etc/nginx/nginx.conf
    remote_src: True
    mode: 0644
    backup: True
  when: stocks_nginx_managed
  notify: Reload nginx

- name: Enable site in nginx
  become: True
  file:
    src: "{{ stocks_base }}/nginx-site.conf"
    dest: /etc/nginx/sites-enabled/stocks.conf
    state: link
  when: stocks_nginx_enable_site
  notify: Reload nginx

- name: Start nginx server
  become: True
  service:
    name: nginx
    state: started
    enabled: True

- name: Wait for Tomcat startup
  wait_for:
    host: 127.0.0.1
    port: 8080
    state: started
